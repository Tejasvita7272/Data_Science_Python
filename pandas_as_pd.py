# -*- coding: utf-8 -*-
"""Pandas_as_pd.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YA1CbjxFZYxikLo9-ENylnnPSDiBGIa3
"""

import pandas as pd

"""MARKED CELL

"""

df=pd.read_csv('/content/sample_data/california_housing_train.csv')

df.head(15)

df.tail(15)

df=pd.read_csv("Salaries.csv")
df.columns

s=pd.read_csv('/content/sample_data/mnist_test.csv')

s.head()

df.dtypes

df.tail(10)

df.info()

df['phd']

df.phd.describe

df.describe()

df.max()

df.mean()

df.min()

df.salary.quantile(0.25)

df.salary.quantile(0.50)

df.std()

df_50=df.head(50)
df_50

df_50.mean()

df.head(50).mean()

df.salary

df['salary']

result1=df.salary
result1

type(result1)

result2=df[['salary']]
result2

newdf=df[['salary','service','phd']]  # imp
newdf

df['discipline'].value_counts()

df['rank'].value_counts()

df.phd.describe()

df.columns

df.service.describe()

df.phd.count()

df.phd.mean()

df.groupby(['rank']).mean()

df.groupby(['discipline']).mean()

df.groupby(['discipline']).count()

df.groupby(['discipline','rank']).count()

df.groupby(['discipline','rank','sex']).count()

df.groupby('rank')[['salary','phd']].mean()

grouped=df.groupby('rank')
type(grouped)

df[df.salary>120000]
# OR   df[df['salary']>120000]

df.shape

df.shape[0]

df.shape[1]

df[df.salary>120000].shape[0]

df[df.salary>120000].shape[1]

newdf=df[(df['sex']=='Male') & (df['salary']>150000)]
newdf

df[(df['service']>15) | (df['salary']>150000)]

newdf.count()

df.iloc[75]

df[(df['service']>15) | (df['salary']>100000)].shape[0]

df.iloc[1:4, 0:4]  # row 1 to 3, col 0 to 2

df.iloc[0:2,]   # only 2 record but all rows

df.iloc[:,4] # all rows , index 4 cols

df.iloc[[10,20,22,24],]  # olny particluar rows with all columns

df.loc[:,['rank','sex']]  # mention col names without index no.

df.loc[[0,1,2],['discipline','rank']]

df.iloc[::5]

df.iloc[10:30:4]

df.iloc[::-1]  # all record in revers order

dir(df)

df[['phd','salary']].agg(['min','mean','max','median','mad','std','skew','kurtosis'])  # mean absolute deviation (mad)

df[['salary']].agg(['skew','kurt'])

df.var()

df.sem()  #std error of mean - standard error ii.e.sigma/ square root of n

